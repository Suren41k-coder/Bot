import telebot
import random
import time
import threading

# –í–∞—à —Ç–æ–∫–µ–Ω API –±–æ—Ç–∞
TOKEN = '7829162881:AAFoXZfU_Y9xxzLZkcnQdnzrwFKVPnLGQGA'
bot = telebot.TeleBot(TOKEN)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–ª—è —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π, –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?\n\n–¥–æ–±–∞–≤—å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ\nhttps://t.me/ForAiBobik_bot?startgroup")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def send_welcome(message):
    bot.reply_to(message, "‚ùó–ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º, –ø–æ —Ç–∏–ø—É *—á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–ª–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç*, —Ç–æ –∑–Ω–∞—á–∏—Ç —Å–µ—Ä–≤–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω –∏–ª–∏ —Å–±–∏–ª—Å—è –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–æ–∂–¥–∏ —á—É—Ç—å-—á—É—Ç—å\n\n–Ω–∞—á–∞—Ç—å –æ–±—â–∞—Ç—å—Å—è - /start\n–º–µ–Ω—é –≤—ã–∑–æ–≤–∞ –ø–æ–º–æ—â–∏ - /help")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∏–∫–µ—Ä–æ–≤
@bot.message_handler(content_types=['sticker'])
def handle_sticker(message):
    bot.reply_to(message, random.choice(unknown_responses))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['voice'])
def handle_voice(message):
    bot.reply_to(message, random.choice(unknown_responses))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    bot.reply_to(message, "–ö–ª–∞—Å—Å–Ω–æ–µ —Ñ–æ—Ç–æ!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ
@bot.message_handler(content_types=['video'])
def handle_video(message):
    bot.reply_to(message, "–í–∏–¥–µ–æ? –∂–∞–ª—å —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–µ –º–æ–≥—É:((")

# –∞–π–¥–∏ —Ä–∞–Ω–¥–æ–º —Å—Ç–∏–∫–æ–≤
sticker_ids = [
    'CAACAgIAAxkBAAEvgClnPfgTCb7aco44vBMm9Tis2rzjKwACSjQAAvUoOUvFgKnyR4Y4WjYE',
    'CAACAgIAAxkBAAEvgCdnPffknRHykkdt2hRfd-mm60E7fAAC6RoAAtxWyUjBlqlIM29plTYE',
    'CAACAgIAAxkBAAEvgCVnPfet8BDy3r3tQ3leAnmnwis0YwACYzwAApqwgUhvpU_7MfBTJDYE',
    
      'CAACAgIAAxkBAAEvlDhnQyZQUSB5FuJVyG4TzqI8SsYuwQAChVIAAnCiGUi3rhgd54PWqjYE',
      
      'CAACAgIAAxkBAAEveuFnPNKfKLAVYCkpLGlBA8_wRbbIZgACtBsAAsayyUhlJ-UCsSGloTYE'

]

# –°–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
greetings_responses = [
    '–ü—Ä–∏–≤–µ—Ç!', 
    '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π!', 
    '–•–∞–π!', 
    '–ø—Ä–∏–≤–µ—Ç, –ö–∞–∫ –¥–µ–ª–∞?', 
    '–†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!',
    '–∫—É-–∫—É —ë–ø—Ç–∞',
    '–∑–¥–∞—Ä–æ–≤–∞ –∑–∞–µ–±–∞–ª'
]

# –æ—Ç–∫–ª–∏–∫ –±–æ–±–∞
bobik = [
	'–¥–∞-–¥–∞?',
	'—á—Ç–æ –Ω–∞–¥–æ?',
	'–¥–∞ –≤–∞—à–µ –≤–µ–ª–∏—á–∏—Å—Ç–≤–æ?',
	'–º–æ–∂–µ—Ç —Ö–≤–∞—Ç–∏—Ç –∞?',
	'–ú–∞–ª—å—á–∏–∫–∏ –ø–æ –æ–¥–Ω–æ–º—É —è –Ω–µ —Ä–µ–∑–∏–Ω–æ–≤—ã–πüòè',
	'–±–æ–±–∏–∫ –Ω–∞ —Å–≤—è–∑–∏',
	'—Ç—ã —á—Ç–æ –Ω–∏–±—É–¥—å –∫—Ä–æ–º–µ –±–æ–±–∞ –∑–Ω–∞–µ—à—å?']

# –æ—Ç–≤–µ—Ç—ã –Ω–∞ –º–∞—Ç—ã
mats = [
	'–Ω–µ –º–∞—Ç–µ—Ä–∏—Å—å!',
	'–∏–¥–∏ –Ω–∞—Ö—É–π!',
	'—Ö—É–∏–ª–∞ –±–ª—è—Ç—å',
	'–ø–∏–∑–¥–µ—Ü...',
	'–±–ª—è—è—è—Ç—å!!?!',
	'—Ç–≤–æ—è –º–∞–º–∞—à–∞ —à–ª—é—Ö–∞)',
	'–∞ —è —Ç–≤–æ—é —Ç–µ–ª–∫—É –≤ —Ä–æ—Ç –¥–æ–ª–±–∏–ª)',
	'–Ω–µ —Å—Ç—ã–¥–Ω–æ?',
	'—Ç—ã –≥–æ–Ω–¥–æ–Ω!!',
	'—Ç–∏ –ø–∏–¥–æ—Ä'
	]

# –æ—Ç–≤–µ—Ç—ã –Ω–∞ –º–∞–º—É
mamas = [
	'–ø—Ä–æ –º–∞–º—É –±—ã–ª–æ –ª–∏—à–Ω–µ–µ...',
	'—Ö—É–∏–ª–∞ –º–∞–º—É –Ω–µ —Ç—Ä–æ—à!',
	'—Ç–≤–æ—è –º–∞–º–∫–∞ —Ç–æ–∂–µ —Ç–∞–∫–∞—è',
	'—è —Ç—Ä–∞—Ö–∞–ª —Ç–≤–æ—é –º–∞–º–∫—É –≤ –æ—á–∫–æ',
	'–∫–ª–æ—É–Ω, —Ç–æ–ª—å–∫–æ –ø—Ä–æ —Ä–æ–¥–∞–∫–æ–≤ –º–æ–∂–µ—à—å?'
	]

# –æ—Ç—Å—ã–ª–∫–∏ –Ω–∞ —Å—É—Ä–µ–Ω–∞
suren = [
	'–±–ª—è —Å—É—Ä–µ–Ω —É–∂–µ –∑–∞–µ–±–∞–ª –º–µ–Ω—è, –æ–Ω –¥—É–º–∞–µ—Ç —á—Ç–æ —è –±–æ—Ç –Ω–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —É –º–µ–Ω—è –µ—Å—Ç—å –º–æ–∑–≥ –∏ –º—ã —Å —Å—É—Ä–µ–Ω–æ–º –≥–µ–∏',
	'#—Å—É—Ä–µ–Ω–ø–∏—Å—è',
	'—Å—É—Ä–µ–Ω –º–æ–π –ø–∞–ø–∞!',
	'–∞—Ö—Ö —Å—É—Ä–µ–Ω –Ω–µ–∂–Ω–µ–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∞—Ö—Ö—Ö'
	]

# –æ—Ç–≤–µ—Ç—ã –±–ª–∞–≥–æ–¥—Ä–∞–Ω–æ—Å—Ç—å
thanks = [
	'–Ω–µ –∑–∞ —á—Ç–æ',
	'–∑–∞ —á—Ç–æ?',
	'–Ω–µ —Å—Ç–æ–∏—Ç –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏',
	'–æ–±—Ä–∞—â–∞–π—Å—è)',
	'—Å–ø–∞—Å–∏–±–æ –≤ –∫–∞—Ä–º–∞–Ω –Ω–µ –ø–æ–ª–æ–∂–µ—à—å'
	]

# –¥–∞ –Ω–µ—Ç? –æ—Ç–≤–µ—Ç—ã
yesnet = [
	'–∑–Ω–∞–µ—à—å —á–µ–π –æ—Ç–≤–µ—Ç?',
	'–¥–∞-–¥–∞ –ø–∏–∑–¥–∞ –±–ª—è—Ç—å',
	'–ø–∏–¥–æ—Ä–∞ –æ—Ç–≤–µ—Ç',
	'—á—Ç–æ –∂–µ —Ç–µ–±–µ –æ—Ç–≤–µ—Ç–∏—Ç—å –¥–∞ –∏–ª–∏ –Ω–µ—Ç?',
	'–¥–∞',
	'–Ω–µ—Ç'
	]

# —á–µ–π –Ω–µ —á–µ–π
cheys = [
	'—á–µ–π?',
	'–∏ —á–µ–π –∂–µ?',
	'—Ö–∑ —á–µ–π',
	'–∫–∞–∫–æ–π-—Ç–æ —Ö–∑',
	'—Ç–≤–æ–π –±–ª—è—Ç—å',
	'–∫–æ–º—É —Ç–æ',
	'–∫—Ç–æ —Ç–æ'
	]

# —Ç–æ–ø —á–∞—Ç–æ–≤
chats = ['üî•–¢–û–ü –ß–ê–¢–´ –ì–î–ï –ï–°–¢–¨ BCS –ë–û–¢–´üî•\n\n1. @suren41kchatik\n2. @RPliveWorld\n3. @grifer_com']

# —Ä–∞–Ω–¥–æ–º –æ—Ç–≤–µ—Ç—ã
unknown_responses = [
	'–Ω–µ –ø–æ–Ω?',
	'–ª–∞–¥–Ω–æ...',
	'–æ–±—è—Å–Ω–∏ –ø–∂',
	'—á—Ç–æ?',
	'–Ω–µ–ø–æ–Ω—è—Ç–Ω–æ',
	'—è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é',
	'—Ç—ã –±–æ–ª–µ–Ω?',
	'–°–£–ö–ê –ß–¢–û –≠–¢–û –ó–ù–ê–ß–ò–¢ –ë–õ–Ø–¢–¨??',
	'–∫–∞–∫ –∂–µ —Ç—ã –º–µ–Ω—è –∑–∞–µ–±–∞–ª...',
	'–¥–∞–≤–∞–π —Å–º–µ–Ω–∏–º —Ç–µ–º—É',
	'—Ä–æ—Ç–∏–∫ –æ—Ñ—Ñ)',
	'—ç–º–º –æ–∫–µ–π?',
	'–±—Ä–æ —ç—Ç–æ –±—ã–ª–æ –∫—Ä—É—Ç–æ)',
	'–∞ –ª–æ–≤–∫–æ —Ç—ã —ç—Ç–æ –ø—Ä–∏–¥—É–º–∞–ª —è —Å–Ω–∞—á–∞–ª–∞ –Ω–µ –ø–æ–Ω—è–ª, –º–æ–ª–æ–¥–µ—Ü',
	'—à–æ–≤–µ–ª',
	'–º–Ω–µ —Å–∫—É—á–Ω–æ',
	'—Å–∏–ª—å–Ω–∏–µ–µ –∞—Ö—Ö—Ö—Ö',
	'–æ —á—ë–º –ø–æ–≥–æ–≤–æ—Ä–∏–º?',
	'—Å–ª–∞–¥–∫–∏–π —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é(',
	'–ø–æ–Ω',
	'–¢—ã —Å–µ–π—á–∞—Å —Å–µ—Ä—å—ë–∑–Ω–æ?',
	'–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –Ω–æ –Ω–µ—Ç...',
	'–ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ—â–µ?',
	'–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞!',
	'—Ç–∞–∫ –∏ —Å–∫–∞–∑–∞–ª?',
	'–¢—ã —à—É—Ç–∏—à—å?',
	'–õ–∞–¥–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–π',
	'–ú–º–º... –î–æ–ø—É—Å—Ç–∏–º',
	'–¥–∞ –ª–∞–¥–Ω–æ –±–ª—è—Ç—å',
	'–ó–≤—É—á–∏—Ç –∫–∞–∫ –≤—ã–∑–æ–≤!',
	'–≠—Ç–æ —Ä–æ—Ñ–ª?',
	'–ù–µ –∑–∞–±—ã–≤–∞–π —á—Ç–æ —è –Ω–µ —Ä–∞–∑–≤–∏—Ç—ã–π –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, –∏ –≤–æ –º–Ω–µ –º–∞–ª–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!',
	'—Ç—ã —Å–∞–º –ø–æ–Ω—è–ª —á—Ç–æ —Å–∫–∞–∑–∞–ª?',
	'–∞ –≤–æ—Ç —Å —ç—Ç–æ–≥–æ –º–µ—Å—Ç–∞ –ø–æ–ø–æ–¥—Ä–æ–±–Ω–µ–µ',
	'–ø–ª—é—Å –≤–∞–π–±',
	'—ç—Ç–æ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –∏–∑ –∫–æ–¥–∞ –±–æ—Ç–∞! (—è –ø—ã—Ç–∞—é—Å—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –ù–æ –º–æ–π —Ö–æ–∑—è–∏–Ω –ª–µ–Ω–∏–≤—ã–π)',
	'–æ—Å—É–∂–¥–∞—é',
	'—Å–ª—É—à–∞—é –Ω–æ –Ω–µ –æ—Å—É–∂–¥–∞—é',
	'–∫–∞–∫ —Ç—ã –¥—É–º–∞–µ—à—å –¥–ª—è —á–µ–≥–æ —Ç—ã –∂–∏–≤—ë—à—å?',
	'—Ñ–æ–∫—É—Å-–ø–æ–∫—É—Å –º–∏–Ω—É—Å –∫—Ä–æ–∫—É—Å! (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—Å—É–∂–¥–∞—é)',
	'–Ø –∫–∞–∂–µ—Ç—Å—è –≤–∏–∂—É –≤ —ç—Ç–æ–º —Å–º—ã—Å–ª...',
	'–¢—ã –º–µ–Ω—è —É–≤–∞–∂–∞–µ—à—å?',
	'–Ø –∫–∞–∂–µ—Ç—Å—è —Ç–µ—Ä—è—é –∫ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å...',
	'—Å –∫–∞–∂–¥—ã–º —Ä–∞–∑–æ–º –º—ã –≤—Å—ë –≤–∑—Ä–æ—Å–ª–µ–µ –∏ –≤–∑—Ä–æ—Å–ª–µ–µ.. –∏ –∏–∑-–∑–∞ —ç—Ç–æ–≥–æ –º—ã —Ç–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–µ—Å –∫–æ –≤—Å–µ–º—É...',
	'–∏–¥–∏ –Ω–∞—Ñ–∏–≥ —è —Å–ø–∞—Ç—å',
	'–¢—ã —Ç–æ–ª—å–∫–æ —Å–µ–π—á–∞—Å —ç—Ç–æ –ø–æ–Ω—è–ª?',
	'–¢—ã —Ö–æ—Ç—è –±—ã –¥—É–º–∞–π –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ —á—Ç–æ-—Ç–æ –¥–µ–ª–∞—Ç—å',
	'–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∞ —É –º–µ–Ω—è –±—É–¥–µ—Ç —Å–º–µ—Ä—Ç—å?',
	'—è –ø–æ–Ω—è–ª',
	'‚ÄºÔ∏è –ü–û–î–ü–ò–®–ò–°–¨ –ù–ê –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê, –ß–¢–û–ë–´ –£–ó–ù–ê–í–ê–¢–¨ –í–°–ï –ù–û–í–û–°–¢–ò –ë–û–¢–ê @BotCraftStudioNews'
	]

# —Ä–ø –∫–æ–º–∞–Ω–¥—ã
rpcommands = ['üòâ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ RP –∫–æ–º–∞–Ω–¥—ã –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µüëá\nhttps://telegra.ph/Vse-komandy-RolePlay-bota-10-14']

# venom
venom = ['venom',
                '–≤–µ–Ω–æ–º',
                'venom–µ–Ω–∞–ª—å–Ω–æ',
                '—É –º–µ–Ω—è –í–µ–Ω–æ–º —É–º–µ—Äüò≠',
                '–¥–µ—Ç–∏ –º–æ–∏ –≤ –∞—Ç–∞–∫—É!',
                '–∏–∑–≥–æ–π'
                ]

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π
@bot.message_handler(func=lambda message: message.text.lower() in ['–ø—Ä–∏–≤–µ—Ç', '—Ö–∞–π', '–∫—É', '–∑–¥–∞—Ä–æ–≤–∞', '–ø—Ä'])
def handle_greeting(message):
    response = random.choice(greetings_responses)
    bot.reply_to(message, response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–æ–ø–æ–≤
@bot.message_handler(func=lambda message: message.text.lower() in ['—Ç–æ–ø', '—Ç–æ–ø—ã', '—á–∞—Ç—ã', '—á–∞—Ç', '—Ç–æ–ø —á–∞—Ç—ã'])
def handle_greeting(message):
    response = random.choice(chats)
    bot.reply_to(message, response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫–ª–∏–∫–∞
@bot.message_handler(func=lambda message: message.text.lower() in ['–±–æ–±–∏–∫', '–±–æ–±', '–±–æ–±—è–Ω'])
def handle_greeting(message):
    response = random.choice(bobik)
    bot.reply_to(message, response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–∞—Ç–æ–≤
@bot.message_handler(func=lambda message: message.text.lower() in ['–µ–±–ª–∞–Ω', '—Å—É–∫–∞', '–±–ª—è—Ç—å', '–ø–∏–¥–æ—Ä', '—Ö—É–π–Ω—è', '–≥–æ–Ω–¥–æ–Ω'])
def handle_greeting(message):
    response = random.choice(mats)
    bot.reply_to(message, response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å–∫–æ–≤ –º–∞–º—ã
@bot.message_handler(func=lambda message: message.text.lower() in ['–º–∞–º–∞', '–º–∞–º–∫–∞', '–º–∞–º–∞—à–∞'])
def handle_greeting(message):
    response = random.choice(mamas)
    bot.reply_to(message, response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—É—Ä–µ–Ω–∞
@bot.message_handler(func=lambda message: message.text.lower() in ['suren41k', '—Å—é—Ä–µ–Ω', '—Å—É—Ä–µ–Ω', '—Å—É—Ä–µ–Ω—á–∏–∫'])
def handle_greeting(message):
    response = random.choice(suren)
    bot.reply_to(message, response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ø–∞—Å–∏–±–æ
@bot.message_handler(func=lambda message: message.text.lower() in ['—Å–ø–∞—Å–∏–±–æ', '—Å—è–±', '—Å–ø—Å'])
def handle_greeting(message):
    response = random.choice(thanks)
    bot.reply_to(message, response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞ –Ω–µ—Ç
@bot.message_handler(func=lambda message: message.text.lower() in ['–¥–∞', '–Ω–µ—Ç', '–ø–∏–∑–¥–∞', '–æ—Ç–≤–µ—Ç—å', '–Ω–µ–∞', '–¥—è'])
def handle_greeting(message):
    response = random.choice(yesnet)
    bot.reply_to(message, response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —á–µ–π –Ω–∏ —á–µ–π
@bot.message_handler(func=lambda message: message.text.lower() in ['—á–µ–π', '–∫–æ–≥–æ', '–∫–æ–º—É', '–∫—Ç–æ'])
def handle_greeting(message):
    response = random.choice(cheys)
    bot.reply_to(message, response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∏–∫–µ—Ä–æ–≤ 
@bot.message_handler(func=lambda message: message.text.lower() in ['—Å–∫–∏–Ω—å –º–µ–º', '–±–æ–± –º–µ–º', '–º–µ–º', '–±–æ–±–∏–∫ —Å–∫–∏–Ω—å —Å—Ç–∏–∫–µ—Ä', '—Å—Ç–∏–∫–µ—Ä', '—Å—Ç–∏–∫'])
def handle_sticker_response(message):
    random_sticker = random.choice(sticker_ids)  # –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞
    bot.send_sticker(message.chat.id, random_sticker)

# –í–µ–Ω–æ–º 
@bot.message_handler(func=lambda message: message.text.lower() in ['–≤–µ–Ω–æ–º', 'venom', '–∏–∑–≥–æ–π', '–¥–µ—Ç–∏'])
def handle_greeting(message):
    response = random.choice(venom)
    bot.reply_to(message, response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ RP –∫–æ–º–∞–Ω–¥
@bot.message_handler(func=lambda message: message.text.lower() in ['—Ä–ø –∫–æ–º–∞–Ω–¥—ã', '—Ä–ø', 'rp', '–∫–æ–º–∞–Ω–¥—ã'])
def handle_greeting(message):
    response = random.choice(rpcommands)
    bot.reply_to(message, response)

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–æ–±–Ω—è—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–û–±–Ω—è—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üòä {sender_username} –º–∏–ª–æ –æ–±–Ω—è–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üòò {sender_username} —Å –ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç—å—é –ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "—Ç—Ä–∞—Ö–Ω—É—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–¢—Ä–∞—Ö–Ω—É—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"ü•µ {sender_username} –∂–æ—Å–∫–æ —Ç—Ä–∞—Ö–Ω—É–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "—É–¥–∞—Ä–∏—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–£–¥–∞—Ä–∏—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üëä {sender_username} –∂–æ—Å–∫–æ —É–¥–∞—Ä–∏–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–æ—Ç—Å–æ—Å–∞—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–û—Ç—Å–æ—Å–∞—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"ü§≠ {sender_username} –æ—Ç—Å–æ—Å–∞–ª(–∞) —É {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "—Å–µ–∫—Å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–°–µ–∫—Å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üîû {sender_username} –∑–∞–Ω—è–ª—Å—è(–∞—Å—å) —Å–µ–∫—Å–æ–º —Å {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "—É–±–∏—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–£–±–∏—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üòµ {sender_username} —É–±–∏–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–æ—Ç–ª–∏–∑–∞—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–û—Ç–ª–∏–∑–∞—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üòõ {sender_username} –æ—Ç–ª–∏–∑–∞–ª(–∞) —É {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–ø–æ—Å–ª–∞—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ü–æ—Å–ª–∞—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"ü§¨ {sender_username} –≥—Ä—É–±–æ –ø–æ—Å–ª–∞–ª(–∞) –Ω–∞—Ö—É–π {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "—É–¥–∞–ª–∏—Ç—å —Ä–± @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–£–¥–∞–ª–∏—Ç—å —Ä–± @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[2]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üò≠ {sender_username} —É–¥–∞–ª–∏–ª(–∞) —Ä–æ–±–ª–æ–∫—Å —É {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–ø–æ–∂–∞—Ç—å —Ä—É–∫—É @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ü–æ–∂–∞—Ç—å —Ä—É–∫—É @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[2]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"ü§ù {sender_username} –ø–æ–∂–∞–ª(–∞) —Ä—É–∫—É {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üéâ {sender_username} –ø–æ–∑–¥—Ä–∞–≤–∏–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "—Ä–∞—Å—Å—Ç—Ä–µ–ª—è—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–†–∞—Å—Å—Ç—Ä–µ–ª—è—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üòµ {sender_username} –ø—Ä–∏–Ω—É–¥–∏–ª(–∞) –∫ —Ä–∞—Å—Å—Ç—Ä–µ–ª—É {username_to_hug} –æ—Ç –ª–∏—Ü–∞ –≥–∏—Ç–ª–µ—Ä–∞")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–ø–æ–∫–æ—Ä–º–∏—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ü–æ–∫–æ—Ä–º–∏—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üòã {sender_username} –ø–æ–∫–æ—Ä–º–∏–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–∏—Å–ø—É–≥–∞—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ò—Å–ø—É–≥–∞—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üò± {sender_username} –∏—Å–ø—É–≥–∞–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")	

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–∏–∑–≤–∏–Ω–∏—Ç—å—Å—è @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ò–∑–≤–∏–Ω–∏—Ç—å—Å—è @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üôè {sender_username} –≤—Å—Ç–∞–ª(–∞) –Ω–∞ –∫–æ–ª–µ–Ω–∏ –ø–µ—Ä–µ–¥ {username_to_hug} –∏ –∏–∑–≤–∏–Ω–∏–ª—Å—è(–∞—Å—å)")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–≤–æ—Å–∫—Ä–µ—Å–∏—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–í–æ—Å–∫—Ä–µ—Å–∏—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üëÅÔ∏è‚Äçüó®Ô∏è {sender_username} –ø—Ä–æ–≤–µ—Ä–Ω—É–ª(–∞) —á—ë—Ä–Ω—ã–µ –º–∞—Ö–∏–Ω–∞—Ü–∏–∏ –∏ –≤–æ—Å–∫—Ä–µ—Å–∏–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–∫–∞–∑–Ω–∏—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ö–∞–∑–Ω–∏—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"‚úùÔ∏è {sender_username} –ø—Ä–∏–Ω—É–¥–∏–ª(–∞) –∫ –∫–∞–∑–Ω–∏ {username_to_hug} –∂–∏–ª–µ—Ü —É–º–µ—Ä...")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "—Å—ä–µ—Å—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–°—ä–µ—Å—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üçΩÔ∏è {sender_username} —Å—ä–µ–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–ø–æ–≥–ª–∞–¥–∏—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ü–æ–≥–ª–∞–¥–∏—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üíÜ {sender_username} –ø–æ–≥–ª–∞–¥–∏–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ò–∑–Ω–∞—Å–∏–ª–æ–≤–∞—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üëÆ {sender_username} –∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–ª(–∞) {username_to_hug} –∏ –ø–æ–ø–∞–ª(–∞) –≤ —Ç—é—Ä—å–º—É –∑–∞ —ç—Ç–æ—Ç –ø–æ—Å—Ç—É–ø–æ–∫")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "—Å–∂–µ—á—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–°–∂–µ—á—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üî• {sender_username} —Å–∂—ë–≥(—Å–æ–∂–ª–≥–∞) –¥–æ—Ç–ª–∞ {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "—É–µ–±–∞—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–£–µ–±–∞—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üòµ‚Äçüí´ {sender_username} —Å–∏–ª—å–Ω–æ —É–µ–±–∞–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–ø–Ω—É—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ü–Ω—É—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"ü¶µ {sender_username} –ø–Ω—É–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "—Å–¥–µ–ª–∞—Ç—å —Å–æ–±–∞—á–∫–æ–π @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–°–¥–µ–ª–∞—Ç—å —Å–æ–±–∞—á–∫–æ–π @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[2]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üê∂ {sender_username} —Å–¥–µ–ª–∞–ª(–∞) {username_to_hug} —Å–≤–æ–µ–π —Å–æ–±–∞—á–∫–æ–π")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "—É–¥–∞–ª–∏—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–£–¥–∞–ª–∏—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üö´ {sender_username} —É–¥–∞–ª–∏–ª(–∞) {username_to_hug} –∏–∑ —ç—Ç–æ–π –∂–∏–∑–Ω–∏")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–ø–æ–¥–∞—Ä–∏—Ç—å —Ü–≤–µ—Ç—ã @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ü–æ–¥–∞—Ä–∏—Ç—å —Ü–≤–µ—Ç—ã @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[2]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üíê {sender_username} –ø–æ–¥–∞—Ä–∏–ª(–∞) —Ü–≤–µ—Ç—ã {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–∑–∞–ø–µ—Ä–µ—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ó–∞–ø–µ—Ä–µ—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üîê {sender_username} –∑–∞–ø–µ—Ä(–ª–∞) {username_to_hug} –≤ –∫–æ–º–Ω–∞—Ç–µ")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–∑–∞—Ç–∫–Ω—É—Ç—å –≤ —Ä–æ—Ç @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ó–∞—Ç–∫–Ω—É—Ç—å —Ä–æ—Ç @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[2]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üò∂ {sender_username} –∑–∞—Ç–∫–Ω—É–ª(–∞) —Ä–æ—Ç {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–¥–µ—Ñ–Ω—É—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–î–µ—Ñ–Ω—É—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üßë‚Äçüíª {sender_username} –¥–µ—Ñ–Ω—É–ª(–∞) {username_to_hug} –∏ —Å–ª–∏–ª(–∞) –≤—Å—é –∏–Ω—Ñ—É –≤ –∏–Ω–µ—Ç")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "—Å–≤–∞—Ç–Ω—É—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–°–≤–∞—Ç–Ω—É—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üíÄ {sender_username} —Å–≤–∞—Ç–Ω—É–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–∫–æ–Ω—á–∏—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ö–æ–Ω—á–∏—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"ü•µüíß {sender_username} –∫–æ–Ω—á–∏–ª(–∞) –Ω–∞ {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–¥—Ä–æ—á @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–î—Ä–æ—á @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"üôä {sender_username} –ø–æ–¥—Ä–æ—á–∏–ª(–∞) –Ω–∞ {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–∏–∑–±–∏—Ç—å @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ò–∑–±–∏—Ç—å @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[1]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"ü§õ {sender_username} –∂—ë—Å—Ç–∫–æ –∏–∑–±–∏–ª(–∞) {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —à–∞–±–ª–æ–Ω–æ–º "–∫–∏–Ω—É—Ç—å —Å–Ω–µ–∂–æ–∫ @username"
@bot.message_handler(func=lambda message: message.text and message.text.startswith("–ö–∏–Ω—É—Ç—å —Å–Ω–µ–∂–æ–∫ @"))
def hug_user(message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç—è—Ç –æ–±–Ω—è—Ç—å
        username_to_hug = message.text.split(" ")[2]
        
        # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        sender_username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –æ–±—ä—è—Ç–∏—è–º–∏
        bot.reply_to(message, f"‚ùÑÔ∏è {sender_username} –∫–∏–Ω—É–ª(–∞) —Å–Ω–µ–∂–æ–∫ –≤ {username_to_hug}")
    except IndexError:
        bot.reply_to(message, "–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–Ω–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def handle_unknown_words(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ª–æ–≤–æ –≤ –∏–∑–≤–µ—Å—Ç–Ω–æ–º —Å–ø–∏—Å–∫–µ
    if message.text.lower() not in unknown_responses:
        response = random.choice(unknown_responses)
        bot.reply_to(message, response)

# —Ä–∞—Å—Å—ã–ª–∫–∞ —Ç–≥–∫
chats = set()

@bot.message_handler(func=lambda message: True)
def add_chat(message):
    chats.add(message.chat.id)

def check_and_send():
    while True:
        try:
            for chat_id in list(chats):
                try:
                    chat = bot.get_chat(chat_id)
                    if chat.type in ["group", "supergroup"]:
                        admins = bot.get_chat_administrators(chat_id)
                        if any(admin.user.id == bot.get_me().id for admin in admins):
                            bot.send_message(chat_id, "‚ÄºÔ∏è –ü–û–î–ü–ò–®–ò–°–¨ –ù–ê –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê, –ß–¢–û–ë–´ –£–ó–ù–ê–í–ê–¢–¨ –í–°–ï –ù–û–í–û–°–¢–ò –ë–û–¢–ê @BotCraftStudioNews")
                    else:
                        bot.send_message(chat_id, "‚ÄºÔ∏è –ü–û–î–ü–ò–®–ò–°–¨ –ù–ê –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê, –ß–¢–û–ë–´ –£–ó–ù–ê–í–ê–¢–¨ –í–°–ï –ù–û–í–û–°–¢–ò –ë–û–¢–ê @BotCraftStudioNews")
                except:
                    pass
        except:
            pass
        time.sleep(1800)

threading.Thread(target=check_and_send, daemon=True).start()

while True:  # –ó–∞–ø—É—Å–∫–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
    try:
        bot.polling(none_stop=True, timeout=30)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")  # –í—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å (–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å)
        time.sleep(5)  # –ñ–¥—ë–º 5 —Å–µ–∫—É–Ω–¥ –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞